#!/bin/bash


OSNAME=FacelessOS
BUILDDIR=out
INDIR=in

mkdir -p out


for i in $(find src/ -name "*.c"); do
    gcc -Ignu-efi/inc -fpic -ffreestanding -fno-stack-protector -fno-stack-check -fshort-wchar -mno-red-zone -maccumulate-outgoing-args -c $i
done

ld -shared -Bsymbolic -Lgnu-efi/x86_64/lib -Lgnu-efi/x86_64/gnuefi -Tgnu-efi/gnuefi/elf_x86_64_efi.lds gnu-efi/x86_64/gnuefi/crt0-efi-x86_64.o *.o -o main.so -lgnuefi -lefi
objcopy -j .text -j .sdata -j .data -j .dynamic -j .dynsym  -j .rel -j .rela -j .rel.* -j .rela.* -j .reloc --target efi-app-x86_64 --subsystem=10 main.so main.efi
rm *.o *.so

mkdir -p out

dd if=/dev/zero of=$BUILDDIR/$OSNAME.img bs=512 count=93750
mformat -i $BUILDDIR/$OSNAME.img
mmd -i $BUILDDIR/$OSNAME.img ::/EFI
mmd -i $BUILDDIR/$OSNAME.img ::/EFI/BOOT
mcopy -i $BUILDDIR/$OSNAME.img main.efi ::/EFI/BOOT
mcopy -i $BUILDDIR/$OSNAME.img $INDIR/startup.nsh ::
# mcopy -i $BUILDDIR/$OSNAME.img kernel.elf ::
mcopy -i $BUILDDIR/$OSNAME.img $INDIR/zap-light16.psf ::


echo -e "\n\n\nFinished building. If you want to run do: ./build run\n\n"

for arg in $@; do 
    if [ $arg == "run" ]
    then
        qemu-system-x86_64 -drive file=$BUILDDIR/$OSNAME.img -m 256M -cpu qemu64 -drive if=pflash,format=raw,unit=0,file="OVMFbin/OVMF_CODE-pure-efi.fd",readonly=on -drive if=pflash,format=raw,unit=1,file="OVMFbin/OVMF_VARS-pure-efi.fd" -net none -monitor stdio -d int -no-reboot -D logfile.txt -M smm=off -soundhw pcspk
    fi
done
